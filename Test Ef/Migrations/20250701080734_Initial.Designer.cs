// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Test_Ef.Models;

#nullable disable

namespace Test_Ef.Migrations
{
    [DbContext(typeof(LandContext))]
    [Migration("20250701080734_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("LandTaal", b =>
                {
                    b.Property<string>("LandenLandCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("TalenTaalCode")
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("LandenLandCode", "TalenTaalCode");

                    b.HasIndex("TalenTaalCode");

                    b.ToTable("LandenTalen", (string)null);

                    b.HasData(
                        new
                        {
                            LandenLandCode = "BEL",
                            TalenTaalCode = "de"
                        },
                        new
                        {
                            LandenLandCode = "BEL",
                            TalenTaalCode = "fr"
                        },
                        new
                        {
                            LandenLandCode = "BEL",
                            TalenTaalCode = "nl"
                        },
                        new
                        {
                            LandenLandCode = "DEU",
                            TalenTaalCode = "de"
                        },
                        new
                        {
                            LandenLandCode = "FRA",
                            TalenTaalCode = "fr"
                        },
                        new
                        {
                            LandenLandCode = "LUX",
                            TalenTaalCode = "de"
                        },
                        new
                        {
                            LandenLandCode = "LUX",
                            TalenTaalCode = "fr"
                        },
                        new
                        {
                            LandenLandCode = "LUX",
                            TalenTaalCode = "lb"
                        },
                        new
                        {
                            LandenLandCode = "NLD",
                            TalenTaalCode = "nl"
                        });
                });

            modelBuilder.Entity("Test_Ef.Models.Land", b =>
                {
                    b.Property<string>("LandCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("LandCode");

                    b.ToTable("Landen");

                    b.HasData(
                        new
                        {
                            LandCode = "BEL",
                            Naam = "Belgie"
                        },
                        new
                        {
                            LandCode = "DEU",
                            Naam = "Duitsland"
                        },
                        new
                        {
                            LandCode = "FRA",
                            Naam = "Frankrijk"
                        },
                        new
                        {
                            LandCode = "LUX",
                            Naam = "Luxemburg"
                        },
                        new
                        {
                            LandCode = "NLD",
                            Naam = "Nederland"
                        });
                });

            modelBuilder.Entity("Test_Ef.Models.Stad", b =>
                {
                    b.Property<int>("StadNummer")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StadNr");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StadNummer"));

                    b.Property<string>("LandCode")
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("StadNummer");

                    b.HasIndex("LandCode");

                    b.ToTable("Steden");
                });

            modelBuilder.Entity("Test_Ef.Models.Taal", b =>
                {
                    b.Property<string>("TaalCode")
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("Naam")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TaalCode");

                    b.ToTable("Talen");

                    b.HasData(
                        new
                        {
                            TaalCode = "de",
                            Naam = "Duits"
                        },
                        new
                        {
                            TaalCode = "fr",
                            Naam = "Frans"
                        },
                        new
                        {
                            TaalCode = "lb",
                            Naam = "Luxemburgs"
                        },
                        new
                        {
                            TaalCode = "nl",
                            Naam = "Nederlands"
                        });
                });

            modelBuilder.Entity("LandTaal", b =>
                {
                    b.HasOne("Test_Ef.Models.Land", null)
                        .WithMany()
                        .HasForeignKey("LandenLandCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Test_Ef.Models.Taal", null)
                        .WithMany()
                        .HasForeignKey("TalenTaalCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Test_Ef.Models.Stad", b =>
                {
                    b.HasOne("Test_Ef.Models.Land", "Land")
                        .WithMany("Steden")
                        .HasForeignKey("LandCode");

                    b.Navigation("Land");
                });

            modelBuilder.Entity("Test_Ef.Models.Land", b =>
                {
                    b.Navigation("Steden");
                });
#pragma warning restore 612, 618
        }
    }
}
